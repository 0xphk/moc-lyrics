#!/usr/bin/env bash

# credits:
# hakerdefo for the original script (https://github.com/hakerdefo/moc-lyrics)
# urlencode function from (https://stackoverflow.com/a/10660730/912236)
#
# - removed perl requirements to use bash urlencode() instead
# - switched from stty size to tput cols for separator
# - some small cosmetic changes
# - write moc compatible lyric files alongside music files
#
# todo: use local lyric files if already downloaded

moc_test() {
    if ! type mocp >/dev/null 2>&1; then
        printf "\033c"
        echo ""
        echo "MOC Is Not Installed!"
        echo ""
        echo "MOC Is An Amazing Console Audio Player!"
        echo "Please Install MOC Using Your Package-manager!"
        echo ""
        exit_moc_lyrics
    else
        moc_check
    fi
}

exit_moc_lyrics() {
    WORK_DIRECTORY="/tmp/moc_lyrics/"
    if [[ -d $WORK_DIRECTORY ]]; then
        rm -r "$WORK_DIRECTORY"
    fi
    exit

}

moc_check() {
    MOCSTATE=$(pgrep mocp)
    if [[ -z $MOCSTATE ]]; then
        printf "\033c"
        echo ""
        echo "MOC Is Not Running!"
        echo "To Start MOC, type \"mocp\" In Your Terminal!"
        echo ""
        exit_moc_lyrics
    else
        moc_status
    fi
}

moc_status() {
    MO_ST=$(mocp -i 2>/dev/null | grep "STOP")
    if [[ -n $MO_ST ]]; then
        printf "\033c"
        echo ""
        echo "MOC Is Not Playing Anything!"
        echo ""
        exit_moc_lyrics
    else
        ### jump to wget_check
        wget_check
    fi
}

### bash urlencode, does not work for unicode characters, but these are unlikely to appear in id tags
urlencode() {
    local string="${1}"
    local strlen=${#string}
    local encoded=""
    local pos c o
    for (( pos=0 ; pos<strlen ; pos++ )); do
        c=${string:$pos:1}
        case "$c" in
            [-_.~a-zA-Z0-9]) o="${c}" ;;
            *)               printf -v o '%%%02x' "'$c"
        esac
        encoded+="${o}"
    done
    echo "${encoded}"
}

wget_check() {
    if ! type wget &>/dev/null; then
        printf "\033c"
        echo ""
        echo "Wget Is Not Installed!"
        echo "Please Install Wget Using Your Package-manager!"
        echo ""
        exit_moc_lyrics
    else
        tag_check
    fi
}

tag_check() {
    ARTIST=$(mocp -i | grep 'Artist:' | sed -e 's/^.*: //')
    TITLE=$(mocp -i | grep 'SongTitle:' | sed -e 's/^.*: //')
    if [[ -z $TITLE ]]; then
        printf "\033c"
        echo ""
        echo "MOC can't get the title field from the file metadata!"
        echo "More information on this subject can be obtained here,"
        echo -e '\e[38;5;82m'"https://en.wikipedia.org/wiki/ID3"
        echo -e '\e[38;5;82m'"https://en.wikipedia.org/wiki/Tag_editor"
        echo ""
        tput sgr0
        exit_moc_lyrics
    fi
    if [[ -z $ARTIST ]]; then
        printf "\033c"
        echo ""
        echo "MOC can't get the artist field from the file metadata!"
        echo "More information on this subject can be obtained here,"
        echo -e '\e[38;5;82m'"https://en.wikipedia.org/wiki/ID3"
        echo -e '\e[38;5;82m'"https://en.wikipedia.org/wiki/Tag_editor"
        echo ""
        tput sgr0
        exit_moc_lyrics
    else
        link_check
    fi
}

link_check() {
    if wget --spider --user-agent="Mozilla/5.0 Gecko/20100101" --no-check-certificate --quiet --timeout=30 -q "https://makeitpersonal.co" -O /dev/null; then
        get_lyrics
    else
        printf "\033c"
        echo ""
        echo "Can Not Connect To The Site \"makeitpersonal\"!"
        echo "Make Sure Your Internet Connection Is Active!"
        exit_moc_lyrics
    fi
}

get_lyrics() {
    WORK_DIRECTORY="/tmp/moc_lyrics/"
    ARTIST1=$(mocp -i | grep 'Artist:' | sed -e 's/^.*: //')
    TITLE1=$(mocp -i | grep 'SongTitle:' | sed -e 's/^.*: //')
    ARTIST2=$(urlencode "$ARTIST1")
    TITLE2=$(urlencode "$TITLE1")
    FILE_HASH=$(echo -n "$TITLE1$ARTIST1" | base32)
    FILE_HASH2=$(echo -n "$FILE_HASH" | sha256sum | awk '{print $1}')
    LYRIC_FILE="$WORK_DIRECTORY/$FILE_HASH2"

    [[ -d $WORK_DIRECTORY ]] || mkdir -p "$WORK_DIRECTORY"
    if [[ ! -f $LYRIC_FILE ]]; then
        wget --user-agent="Mozilla/5.0 Gecko/20100101" --no-check-certificate --quiet --timeout=30 -O "$LYRIC_FILE" "https://makeitpersonal.co/lyrics?artist=$ARTIST2&title=$TITLE2"
        LYRIC_CHECK=$(grep -i "We don't have lyrics for this song yet" "$LYRIC_FILE")

        if [[ -z $LYRIC_CHECK ]]; then
            printf '\n%s\n%s\n' "$TITLE1 - $ARTIST1" "$(cat "$LYRIC_FILE")" >"$LYRIC_FILE"
            printf '\n' >> "$LYRIC_FILE"
            printf '%.s-' $(seq 1 $(tput cols)) >> "$LYRIC_FILE"

            ### save as moc compatible lyric file
            MOC_FILE=$(mocp -i | grep 'File:' | sed -e 's/^.*: //' -e 's/.mp3//')

            if [[ ! -f $MOC_FILE ]]; then
                cp "$LYRIC_FILE" "$MOC_FILE"
                echo -e "moc lyric file saved as:\n$MOC_FILE"
            else
                echo -e "moc lyric file already saved as:\n$MOC_FILE"
            fi

            cat "$LYRIC_FILE"
            moc_check
        else
            echo ""
            echo "$TITLE1 - $ARTIST1"
            echo ""
            echo "Sorry, We don't have lyrics for this song yet."
            echo "You can make a contribution by adding this at,"
            echo -e '\e[38;5;82m'"https://lyrics.wikia.com"
            echo ""
            tput sgr0
            printf '%.s-' $(seq 1 $(tput cols))
            moc_check
        fi
    else
        moc_check
    fi
}

while :
do
    moc_test
done
